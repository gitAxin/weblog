tier1.sources  =source1
tier1.channels =channel1
tier1.sinks    = sink1
#定义source1
tier1.sources.source1.type = com.hjx.weblog.flume.source.FolderSource
#读取文件之后睡眠时间
#tier1.sources.source1.sleeptime=5
tier1.sources.source1.filenum=3000
#需要创建此目录，否则会报错
tier1.sources.source1.filePath =/usr/chl/data/filedir/
#需要创建此目录，代码中未判断和处理，否则会报错
tier1.sources.source1.successfulDir=/usr/chl/data/successful/
tier1.sources.source1.deserializer.outputCharset=UTF-8
tier1.sources.source1.channels = channel1
# 定义拦截器1
tier1.sources.source1.interceptors=i1
tier1.sources.source1.interceptors.i1.type= com.hjx.weblog.flume.interceptor.DataCleanInterceptor$Builder
#定义channel
tier1.channels.channel1.type = memory
#尝试添加或者删除一个event的超时时间，单位为秒。默认是3，也就是3秒
tier1.channels.channel1.keep-alive= 30
#在 channel 中 最多能保存多少个 event。默认是100
tier1.channels.channel1.capacity = 10000
#在每次从source中获取数据或者将数据sink出去的一次事务操作中，最多处理的 event 数。默认是100
tier1.channels.channel1.transactionCapacity = 5000
#event header跟最大可用内存的字节占比
tier1.channels.channel1.byteCapacityBufferPercentage = 200
#在 channel 中最多能容纳 所有event body的总字节数
tier1.channels.channel1.byteCapacity = 800000
#定义sink1
tier1.sinks.sink1.type = com.hjx.weblog.flume.sink.KafkaSink
tier1.sinks.sink1.kafkaTopic = chl_test1
tier1.sinks.sink1.channel = channel1